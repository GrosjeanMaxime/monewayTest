// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.7.1
// source: balance.proto

package pb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type UpdateRequestBalance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId string  `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	Amount    float64 `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *UpdateRequestBalance) Reset() {
	*x = UpdateRequestBalance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balance_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRequestBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRequestBalance) ProtoMessage() {}

func (x *UpdateRequestBalance) ProtoReflect() protoreflect.Message {
	mi := &file_balance_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRequestBalance.ProtoReflect.Descriptor instead.
func (*UpdateRequestBalance) Descriptor() ([]byte, []int) {
	return file_balance_proto_rawDescGZIP(), []int{0}
}

func (x *UpdateRequestBalance) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *UpdateRequestBalance) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type GetRequestBalance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId string `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
}

func (x *GetRequestBalance) Reset() {
	*x = GetRequestBalance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balance_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequestBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequestBalance) ProtoMessage() {}

func (x *GetRequestBalance) ProtoReflect() protoreflect.Message {
	mi := &file_balance_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequestBalance.ProtoReflect.Descriptor instead.
func (*GetRequestBalance) Descriptor() ([]byte, []int) {
	return file_balance_proto_rawDescGZIP(), []int{1}
}

func (x *GetRequestBalance) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

type ResponseBalance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount float64 `protobuf:"fixed64,1,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *ResponseBalance) Reset() {
	*x = ResponseBalance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balance_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseBalance) ProtoMessage() {}

func (x *ResponseBalance) ProtoReflect() protoreflect.Message {
	mi := &file_balance_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseBalance.ProtoReflect.Descriptor instead.
func (*ResponseBalance) Descriptor() ([]byte, []int) {
	return file_balance_proto_rawDescGZIP(), []int{2}
}

func (x *ResponseBalance) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

var File_balance_proto protoreflect.FileDescriptor

var file_balance_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x4c, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x31, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x22, 0x29, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x32, 0x7b, 0x0a, 0x07, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x3a, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x15, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x1a, 0x10,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x22, 0x00, 0x12, 0x34, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x12, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x1a, 0x10, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x00, 0x42, 0x05, 0x5a, 0x03, 0x2f, 0x70, 0x62, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_balance_proto_rawDescOnce sync.Once
	file_balance_proto_rawDescData = file_balance_proto_rawDesc
)

func file_balance_proto_rawDescGZIP() []byte {
	file_balance_proto_rawDescOnce.Do(func() {
		file_balance_proto_rawDescData = protoimpl.X.CompressGZIP(file_balance_proto_rawDescData)
	})
	return file_balance_proto_rawDescData
}

var file_balance_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_balance_proto_goTypes = []interface{}{
	(*UpdateRequestBalance)(nil), // 0: UpdateRequestBalance
	(*GetRequestBalance)(nil),    // 1: GetRequestBalance
	(*ResponseBalance)(nil),      // 2: ResponseBalance
}
var file_balance_proto_depIdxs = []int32{
	0, // 0: Balance.UpdateBalance:input_type -> UpdateRequestBalance
	1, // 1: Balance.GetBalance:input_type -> GetRequestBalance
	2, // 2: Balance.UpdateBalance:output_type -> ResponseBalance
	2, // 3: Balance.GetBalance:output_type -> ResponseBalance
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_balance_proto_init() }
func file_balance_proto_init() {
	if File_balance_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_balance_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRequestBalance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balance_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequestBalance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balance_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseBalance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_balance_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_balance_proto_goTypes,
		DependencyIndexes: file_balance_proto_depIdxs,
		MessageInfos:      file_balance_proto_msgTypes,
	}.Build()
	File_balance_proto = out.File
	file_balance_proto_rawDesc = nil
	file_balance_proto_goTypes = nil
	file_balance_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BalanceClient is the client API for Balance service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BalanceClient interface {
	UpdateBalance(ctx context.Context, in *UpdateRequestBalance, opts ...grpc.CallOption) (*ResponseBalance, error)
	GetBalance(ctx context.Context, in *GetRequestBalance, opts ...grpc.CallOption) (*ResponseBalance, error)
}

type balanceClient struct {
	cc grpc.ClientConnInterface
}

func NewBalanceClient(cc grpc.ClientConnInterface) BalanceClient {
	return &balanceClient{cc}
}

func (c *balanceClient) UpdateBalance(ctx context.Context, in *UpdateRequestBalance, opts ...grpc.CallOption) (*ResponseBalance, error) {
	out := new(ResponseBalance)
	err := c.cc.Invoke(ctx, "/Balance/UpdateBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *balanceClient) GetBalance(ctx context.Context, in *GetRequestBalance, opts ...grpc.CallOption) (*ResponseBalance, error) {
	out := new(ResponseBalance)
	err := c.cc.Invoke(ctx, "/Balance/GetBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BalanceServer is the server API for Balance service.
type BalanceServer interface {
	UpdateBalance(context.Context, *UpdateRequestBalance) (*ResponseBalance, error)
	GetBalance(context.Context, *GetRequestBalance) (*ResponseBalance, error)
}

// UnimplementedBalanceServer can be embedded to have forward compatible implementations.
type UnimplementedBalanceServer struct {
}

func (*UnimplementedBalanceServer) UpdateBalance(context.Context, *UpdateRequestBalance) (*ResponseBalance, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateBalance not implemented")
}
func (*UnimplementedBalanceServer) GetBalance(context.Context, *GetRequestBalance) (*ResponseBalance, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBalance not implemented")
}

func RegisterBalanceServer(s *grpc.Server, srv BalanceServer) {
	s.RegisterService(&_Balance_serviceDesc, srv)
}

func _Balance_UpdateBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRequestBalance)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BalanceServer).UpdateBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Balance/UpdateBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BalanceServer).UpdateBalance(ctx, req.(*UpdateRequestBalance))
	}
	return interceptor(ctx, in, info, handler)
}

func _Balance_GetBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequestBalance)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BalanceServer).GetBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Balance/GetBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BalanceServer).GetBalance(ctx, req.(*GetRequestBalance))
	}
	return interceptor(ctx, in, info, handler)
}

var _Balance_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Balance",
	HandlerType: (*BalanceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateBalance",
			Handler:    _Balance_UpdateBalance_Handler,
		},
		{
			MethodName: "GetBalance",
			Handler:    _Balance_GetBalance_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "balance.proto",
}
